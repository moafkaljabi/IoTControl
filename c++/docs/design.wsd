@startuml IoTDesign
skinparam classAttributeIconSize 0

package "Transport Layer" {
    class TCPServer {
        +start()
        +stop()
    }

    class ClientHandler {
        +handleClient()
    }

    class MQTTClient {
        +connect()
        +publish()
        +subscribe()
    }

    class MQTTServer {
        +start()
        +handleMessage()
    }

    TCPServer "1" *-- "*" ClientHandler
}

package "Protocol Layer" {
    class JSONReceiver {
        +parseMessage(string): SensorData
    }

    class JSONSender {
        +serialize(SensorData): string
    }
}

package "Application Logic" {
    class DataLogger {
        +readFromUART(): SensorData
        +logData()
    }

    class MockClient {
        +simulateSensorData()
    }

    class DeviceManager {
        +registerDevice()
        +getStatus()
    }
}

package "Core Models" {
    class SensorData {
        -timestamp: string
        -sensorType: string
        -value: float
    }

    class Command {
        -commandType: string
        -targetDevice: string
    }
}

package "Interfaces" {
    interface IMessageTransport {
        +send(message: string)
        +receive(): string
    }

    interface IDataConsumer {
        +consume(SensorData)
    }
}

TCPServer ..|> IMessageTransport
MQTTClient ..|> IMessageTransport
ClientHandler --> JSONReceiver
ClientHandler --> JSONSender
MQTTClient --> JSONReceiver
MQTTClient --> JSONSender
JSONReceiver --> SensorData
DataLogger --> SensorData
MockClient --> SensorData
DeviceManager --> SensorData
DeviceManager --> Command

@enduml
